Starting audit...
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:24:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:28:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:28:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:32:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:36:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:36:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:40:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:44:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:44:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:48:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:52:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:52:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:56:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:58:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:59:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:60:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:61:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\ActionInput.java:62:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15:24: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15:37: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15:54: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15:79: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:15:95: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:26:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:30:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:30:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:34:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:38:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:38:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:42:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:46:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:46:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:50:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:54:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:54:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:58:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:62:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:62:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:66:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:68:30: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:69:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:70:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:71:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:72:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Credentials.java:73:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:3:8: Unused import - pageStructure.HomeAuth. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:4:8: Unused import - pageStructure.HomeUnauth. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:5:8: Unused import - pageStructure.Login. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:23:53: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:25:35: Avoid nested blocks. [AvoidNestedBlocks]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:32: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:44:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:48:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:48:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:52:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:56:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:56:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:60:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:64:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:64:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:68:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:70:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:71:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:72:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\Input.java:73:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:23: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:36: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:46: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:60: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:86: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:37:112: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:52:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:56:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:56:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:60:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:64:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:64:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:68:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:72:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:72:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:77:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:81:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:81:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:85:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:85:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:89:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:93:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:97:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:97:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:101:5: Class 'MovieInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:103:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:104:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:105:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:106:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:107:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:108:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\MovieInput.java:109:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:4:17: Variable 'credentials' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:6:22: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:14:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:18:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:18:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:22:5: Class 'UserInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:24:35: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Input\UserInput.java:25:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:1:13: Using the '.*' form of import should be avoided - Input.*. [AvoidStarImport]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:6:8: Unused import - movies.Movie. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:8:21: Using the '.*' form of import should be avoided - pageStructure.*. [AvoidStarImport]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:16:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:17:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:41:13: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Main.java:58:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39: Line is longer than 100 characters (found 184). [LineLength]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:18: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:31: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:41: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:55: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:81: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:107: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:142: Parameter numLikes should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:156: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:39:168: Parameter numRatings should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:51:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:55:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:55:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:59:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:63:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:63:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:67:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:71:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:71:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:75:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:79:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:79:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:83:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:87:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:87:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:91:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:95:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:95:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:99:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:103:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:103:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:107:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:111:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:111:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:115:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:119:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:119:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:123:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:125:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:126:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:127:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:128:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:129:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:130:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:131:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:132:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:133:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\Movie.java:134:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:8:22: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:10:26: Parameter moviesInput should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:13: Line is longer than 100 characters (found 197). [LineLength]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:13:193: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:13:193: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:13:196: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:18:5: Class 'MovieDataBase' looks like designed for extension (can be subclassed), but the method 'insertMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieDataBase' final or making the method 'insertMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:18:29: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:24:5: Class 'MovieDataBase' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieDataBase' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:28:5: Class 'MovieDataBase' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieDataBase' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:28:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:32:5: Class 'MovieDataBase' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieDataBase' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:34:33: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\movies\MovieDataBase.java:35:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Details.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Details.java:3:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Details.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeAuth.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeAuth.java:2:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeAuth.java:4:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeAuth.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeUnauth.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeUnauth.java:3:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\HomeUnauth.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Login.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Login.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Logout.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Logout.java:3:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Logout.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Movies.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Movies.java:3:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Movies.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:16:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:19:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getLinks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getLinks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:23:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setLinks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setLinks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:23:26: Parameter links should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:27:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'insertLink' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'insertLink' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:27:28: Parameter pageName should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:27:45: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:30:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'printLinks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'printLinks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Page.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Register.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Register.java:3:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Register.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Upgrade.java:1:9: Name 'pageStructure' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Upgrade.java:3:34: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\pageStructure\Upgrade.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Test.java:8:8: Unused import - java.util.Objects. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\Test.java:150:41: Inner assignments should be avoided. [InnerAssignment]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:5:8: Unused import - movies.MovieDataBase. [UnusedImports]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:10:17: Variable 'credentials' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:11:9: Variable 'tokensCount' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:12:9: Variable 'numFreePremiumMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:14:22: Variable 'purchasedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:15:22: Variable 'watchedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:16:22: Variable 'likedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:17:22: Variable 'ratedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:23:17: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:23:42: Parameter tokensCount should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:23:59: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:33:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:37:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:37:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:41:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:45:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:45:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:49:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:53:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:53:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:57:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:61:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:61:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:65:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:69:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:69:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:73:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:77:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:77:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:81:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:85:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:85:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:89:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:91:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:92:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:93:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:94:66: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:95:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:96:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:97:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\User.java:98:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:13:27: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:24:25: Parameter userInputs should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:28:50: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:35:5: Class 'UserDataBase' looks like designed for extension (can be subclassed), but the method 'findUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDataBase' final or making the method 'findUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:35:26: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:39:5: Class 'UserDataBase' looks like designed for extension (can be subclassed), but the method 'insertUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDataBase' final or making the method 'insertUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:39:28: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:40:46: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:45:30: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:57:5: Class 'UserDataBase' looks like designed for extension (can be subclassed), but the method 'registerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDataBase' final or making the method 'registerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:57:30: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:61:5: Class 'UserDataBase' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDataBase' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:63:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\tudor\IdeaProjects\proiect1\.\src\users\UserDataBase.java:64:33: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 285 errors.
